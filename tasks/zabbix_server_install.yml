- import_tasks: ./zabbix_repo.yml

- name: Install zabbix
  ansible.builtin.apt:
    name: 
      - zabbix-server-pgsql
      - zabbix-frontend-php
      - php8.3-pgsql
      - zabbix-nginx-conf
      - zabbix-sql-scripts
      - zabbix-agent
    state: present
    update_cache: true

- name: Edit /etc/zabbix/*.conf
  block:
  - name: Replace a nginx.conf entry 
    ansible.builtin.lineinfile:
      path: /etc/zabbix/nginx.conf
      search_string: '#        listen          80'
      line:         listen          80;
  - name: Replace a nginx.conf entry 
    ansible.builtin.lineinfile:
      path: /etc/zabbix/nginx.conf
      search_string: '#        server_name'
      line:         server_name   {{ ansible_host }};
  - name: Replace a php-fpm.conf entry 
    ansible.builtin.lineinfile:
      path: /etc/zabbix/php-fpm.conf
      search_string: 'php_value[post_max_size]'
      line: php_value[post_max_size] = 32M
  - name: Replace a php-fpm.conf entry 
    ansible.builtin.lineinfile:
      path: /etc/zabbix/php-fpm.conf
      search_string: 'php_value[upload_max_filesize]'
      line: php_value[upload_max_filesize] = 16M
  - name: Reload service nginx
    ansible.builtin.systemd_service:
      name: nginx.service
      state: restarted
      daemon_reload: true

- name: Reload service php
  ansible.builtin.systemd_service:
    name: php8.3-fpm.service
    state: reloaded

- name: Install PostgreSQL
  ansible.builtin.apt:
    name: 
      - postgresql
      - postgresql-contrib
      - python3-psycopg2
      - python3-pip
      - python3-dev
      - python3-venv
      - acl
    state: present
    update_cache: true

- name: PostgreSQL setup
  become: yes
  become_user: postgres
  block:
    - name: Create role zabbix
      community.postgresql.postgresql_user:
        name: zabbix
        password: "zabbix"
    - name: Create DB zabbix
      community.postgresql.postgresql_db: 
        name: zabbix
        encoding: UTF-8
        state: present
        owner: zabbix

- name: PostgreSQL restore
  become: yes
  become_user: zabbix
  ansible.builtin.shell: zcat /usr/share/zabbix/sql-scripts/postgresql/server.sql.gz | psql zabbix

- name: Set DB password
  ansible.builtin.lineinfile:
    path: /etc/zabbix/zabbix_server.conf
    search_string: '# DBPassword='
    line: DBPassword=zabbix

- name: Preinstall TimescaleDB
  ansible.builtin.apt:
    name: 
      - gnupg
      - apt-transport-https
    state: present
    update_cache: true

- name: Install TimescaleDB 
  block:
    - name: Add TimescaleDB repo
      ansible.builtin.shell: echo "deb https://packagecloud.io/timescale/timescaledb/ubuntu/ $(lsb_release -c -s) main" > /etc/apt/sources.list.d/timescaledb.list
    - stat: path=/etc/apt/trusted.gpg.d/timescaledb.gpg
      register: p
    - name: Download gpg key
      when: p.stat.exists == False
      ansible.builtin.shell: wget --quiet -O - https://packagecloud.io/timescale/timescaledb/gpgkey | gpg --dearmor -o /etc/apt/trusted.gpg.d/timescaledb.gpg

- name: Install TimescaleDB
  ansible.builtin.apt:
    name: 
      - timescaledb-2-postgresql-16=2.15.*
      - timescaledb-2-loader-postgresql-16=2.15.*
      - postgresql-client-16
    state: present
    update_cache: true

- name: Tune TimescaleDB 
  ansible.builtin.shell: timescaledb-tune --quiet --yes

- name: Change max_connections
  ansible.builtin.lineinfile:
    path: /etc/postgresql/16/main/postgresql.conf
    search_string: 'max_connections ='
    line: max_connections = 200

- name: Reload service postgresql
  ansible.builtin.systemd_service:
    name: postgresql.service
    state: restarted
    daemon_reload: true

- name: Connect DB extention
  become: yes
  become_user: postgres
  ansible.builtin.shell: echo "CREATE EXTENSION IF NOT EXISTS timescaledb CASCADE;" | psql zabbix

- name: Run convert script
  become: yes
  become_user: zabbix
  ansible.builtin.shell: cat /usr/share/zabbix-sql-scripts/postgresql/timescaledb/schema.sql | psql zabbix

- name: Enable and autorun Zabbix
  ansible.builtin.shell: systemctl enable --now zabbix-server zabbix-agent
