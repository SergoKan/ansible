- hosts: server
  become: true
  tasks:

    - name: Update apt repo and cache
      ansible.builtin.apt: 
        update_cache: true
    
    - name: Upgrade the OS (apt-get dist-upgrade)
      ansible.builtin.apt:
        upgrade: full

    - name: Remove unused dependency packages
      ansible.builtin.apt:
        autoremove: true

    - name: Install pakages
      ansible.builtin.apt:
        name: 
          - mc 
          - cifs-utils
        state: present
        update_cache: true

    - name: Install a .deb package from the internet
      ansible.builtin.apt:
        deb: https://repo.zabbix.com/zabbix/7.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_latest_7.0+ubuntu24.04_all.deb

    - name: Install zabbix
      ansible.builtin.apt:
        name: 
          - zabbix-agent2
          - zabbix-agent2-plugin-*
        state: present
        update_cache: true

    - name: Edit /etc/zabbix/zabbix_agent2.conf
      block:
      - name: Set Server
        ansible.builtin.lineinfile:
          path:  /etc/zabbix/zabbix_agent2.conf
          search_string: 'Server='
          line: Server=172.16.5.202
      - name: Set ServerActive
        ansible.builtin.lineinfile:
          path: /etc/zabbix/zabbix_agent2.conf
          search_string: 'ServerActive='
          line: ServerActive=172.16.5.202

    - name: Reload Zabbix agent
      ansible.builtin.systemd_service:
        name: zabbix-agent2.service
        state: reloaded

    - name: Add NTP server
      ansible.builtin.lineinfile:
        path: /etc/systemd/timesyncd.conf
        search_string: '#NTP='
        line: NTP=172.16.4.254

    - name: Set timezone to Europe/Moscow
      timezone:
        name: Europe/Moscow

    - name: Reload service timesync
      ansible.builtin.systemd_service:
        name: systemd-timesyncd.service
        state: restarted
        daemon_reload: true

    - name: Set locale to RU
      ansible.builtin.shell: localectl set-locale LANG=ru_RU.UTF-8
      
    - name: Set a hostname
      ansible.builtin.hostname: name={{ inventory_hostname }}
        
    - name: Edit /etc/hosts
      ansible.builtin.lineinfile:
        path: /etc/hosts
        search_string: '127.0.1.1'
        line: 127.0.1.1 {{ inventory_hostname }} \n {{ ansible_host }} {{ inventory_hostname }}

    - name: Creates directory /mnt/smb
      ansible.builtin.file:
        path: /mnt/smb
        state: directory

    - name: Add cred file
      ansible.builtin.lineinfile:
        path: /etc/.smbcredentials1
        line: 
          - username=
          - password=
          - domain=
        create: yes

    - name: Add SMB share to fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        line: '# //172.16..191/Video /mnt/smb cifs credentials=/etc/.smbcredentials1,rw,auto,nobrl,vers=2.0,iocharset=utf8,uid=line,gid=line,file_mode=0664,dir_mode=0775 0 0'
        create: yes

    - name: Check if a reboot is needed
      register: reboot_required_file
      stat: 
        path: /var/run/reboot-required
        get_checksum: true 
        checksum_algorithm: md5

    - name: Reboot if kernel updated
      reboot:
        msg: "Reboot initiated by Ansible for kernel updates"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required_file.stat.exists

    - name: Delete old Linia
      ansible.builtin.file:
        path: ./line.run
        state: absent

    - name: Download Linia
      get_url:
        url: https://devline.ru/count.php?c=410
        dest: ./line.run
        mode: '0755' 
         
    - name: Install Linia 
      ansible.builtin.shell: yes | sudo ./line.run

    - name: Add a licensing.sh
      ansible.builtin.lineinfile:
        path: ./licensing.sh
        line: '# /opt/line/bin/licensing -uadmin -ppasswd -s127.0.0.1:0000 activate'
        create: yes
